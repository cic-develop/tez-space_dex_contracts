{
	"id": "1b7561fd2af881f57265256da879adec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TestToken.sol": {
				"content": "// // SPDX-License-Identifier: MIT\n// // Compatible with OpenZeppelin Contracts ^5.0.0\n// pragma solidity ^0.8.20;\n\n// import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n// import \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\n\n// contract PERProject is ERC20, ERC20Permit {\n//     constructor() ERC20(\"PER Project\", \"PER\") ERC20Permit(\"PER Project\") {\n//         _mint(msg.sender, 100000000000000000000 * 10 ** decimals());\n//     }\n// }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"errors": [
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.25;\"\n--> contracts/TestToken.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.25;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/TestToken.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/TestToken.sol": {
				"ast": {
					"absolutePath": "contracts/TestToken.sol",
					"exportedSymbols": {},
					"id": 1,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [],
					"src": "462:0:0"
				},
				"id": 0
			}
		}
	}
}