{
	"id": "6fcc1ec787e76b325ca03e69b6c67715",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/P3DexERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity =0.5.16;\n\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2ERC20.sol\";\nimport \"@uniswap/v2-core/contracts/libraries/SafeMath.sol\";\n\ncontract P3DexERC20 is IUniswapV2ERC20 {\n    using SafeMath for uint;\n\n    string public name;\n    string public constant symbol = \"P3 Dex LP\";\n    uint8 public constant decimals = 18;\n    uint public totalSupply;\n    mapping(address => uint) public balanceOf;\n    mapping(address => mapping(address => uint)) public allowance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH =\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint) public nonces;\n\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    constructor() public {\n        uint chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\n                    \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n                ),\n                keccak256(bytes(name)),\n                keccak256(bytes(\"1\")),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(address owner, address spender, uint value) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(address from, address to, uint value) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint value\n    ) external returns (bool) {\n        if (allowance[from][msg.sender] != uint(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(\n                value\n            );\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(\n        address owner,\n        address spender,\n        uint value,\n        uint deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        require(deadline >= block.timestamp, \"UniswapV2: EXPIRED\");\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(\n                    abi.encode(\n                        PERMIT_TYPEHASH,\n                        owner,\n                        spender,\n                        value,\n                        nonces[owner]++,\n                        deadline\n                    )\n                )\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(\n            recoveredAddress != address(0) && recoveredAddress == owner,\n            \"UniswapV2: INVALID_SIGNATURE\"\n        );\n        _approve(owner, spender, value);\n    }\n}\n"
			},
			"@uniswap/v2-core/contracts/libraries/SafeMath.sol": {
				"content": "pragma solidity =0.5.16;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x, 'ds-math-add-overflow');\n    }\n\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\n    }\n\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\n    }\n}\n"
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2ERC20.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2ERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2ERC20.sol": {
				"IUniswapV2ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2ERC20.sol\":\"IUniswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x9e433765e9ef7b4ff5e406b260b222c47c2aa27d36df756db708064fcb239ae7\",\"urls\":[\"bzz-raw://5b67c24a5e1652b51ad2f37adad2905519f0e05e7c8b2b4d8b3e00b429bb9213\",\"dweb:/ipfs/QmarJq43GabAGGSqtMUb87ACYQt73mSFbXKyFAPDXpbFNM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@uniswap/v2-core/contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v2-core/contracts/libraries/SafeMath.sol\":132:562  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v2-core/contracts/libraries/SafeMath.sol\":132:562  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820555a0f0ec527caec527e902d90164c3bfebcad60333036f9a94d25c8b617c80064736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820555a0f0ec527caec527e902d90164c3bfebcad60333036f9a94d25c8b617c80064736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SSTORE GAS 0xF 0xE 0xC5 0x27 0xCA 0xEC MSTORE PUSH31 0x902D90164C3BFEBCAD60333036F9A94D25C8B617C80064736F6C6343000510 STOP ORIGIN ",
							"sourceMap": "132:430:1:-;;:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820555a0f0ec527caec527e902d90164c3bfebcad60333036f9a94d25c8b617c80064736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SSTORE GAS 0xF 0xE 0xC5 0x27 0xCA 0xEC MSTORE PUSH31 0x902D90164C3BFEBCAD60333036F9A94D25C8B617C80064736F6C6343000510 STOP ORIGIN ",
							"sourceMap": "132:430:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 562,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 562,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820555a0f0ec527caec527e902d90164c3bfebcad60333036f9a94d25c8b617c80064736f6c63430005100032",
									".code": [
										{
											"begin": 132,
											"end": 562,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "ADDRESS"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "EQ"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "MSTORE"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "DUP1"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-core/contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x9c8465de751317860b623cd77f7f53f41a84b6624c0580ee526dcf7a2b7cb80c\",\"urls\":[\"bzz-raw://9b371b3eb0649b486f76cd628cc060354d1ac11fa8baed1170567271655f05d7\",\"dweb:/ipfs/QmTUg31wK9UyX6o1Q1mxE4DQhuc1rWGBanNTu1uagNVQB6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/P3DexERC20.sol": {
				"P3DexERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/P3DexERC20.sol\":191:3900  contract P3DexERC20 is IUniswapV2ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/P3DexERC20.sol\":987:1469  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"contracts/P3DexERC20.sol\":1170:1303  keccak256(... */\n  mload(0x40)\n    /* \"contracts/P3DexERC20.sol\":1074:1081  chainid */\n  chainid\n  swap1\n    /* \"contracts/P3DexERC20.sol\":1170:1303  keccak256(... */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x52\n  add\n  swap1\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  keccak256\n    /* \"contracts/P3DexERC20.sol\":1337:1341  name */\n  0x00\n    /* \"contracts/P3DexERC20.sol\":1321:1343  keccak256(bytes(name)) */\n  mload(0x40)\n  dup1\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  dup1\n  iszero\n  tag_4\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_5\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  dup3\n  add\n  swap2\n  jump(tag_4)\ntag_5:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_6:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_6\n  jumpi\ntag_4:\n  pop\n  pop\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  dup3\n  keccak256\n    /* \"contracts/P3DexERC20.sol\":1371:1381  bytes(\"1\") */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x01\n  dup4\n  mstore\n  shl(0xf8, 0x31)\n  0x20\n  swap4\n  dup5\n  add\n  mstore\n    /* \"contracts/P3DexERC20.sol\":1142:1452  abi.encode(... */\n  dup2\n  mload\n  dup1\n  dup5\n  add\n  swap7\n  swap1\n  swap7\n  mstore\n  dup6\n  dup3\n  add\n  mstore\n    /* \"contracts/P3DexERC20.sol\":1361:1382  keccak256(bytes(\"1\")) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"contracts/P3DexERC20.sol\":1142:1452  abi.encode(... */\n  0x60\n  dup7\n  add\n  mstore\n  0x80\n  dup6\n  add\n  swap6\n  swap1\n  swap6\n  mstore\n    /* \"contracts/P3DexERC20.sol\":1433:1437  this */\n  address\n    /* \"contracts/P3DexERC20.sol\":1142:1452  abi.encode(... */\n  0xa0\n  dup1\n  dup7\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup6\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup7\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"contracts/P3DexERC20.sol\":1142:1452  abi.encode(... */\n  0xc0\n  swap1\n  swap5\n  add\n  swap1\n  swap5\n  mstore\n  pop\n  pop\n    /* \"contracts/P3DexERC20.sol\":1119:1462  keccak256(... */\n  dup1\n  mload\n  swap2\n  add\n  keccak256\n    /* \"contracts/P3DexERC20.sol\":1100:1116  DOMAIN_SEPARATOR */\n  0x04\n    /* \"contracts/P3DexERC20.sol\":1100:1462  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n    /* \"contracts/P3DexERC20.sol\":191:3900  contract P3DexERC20 is IUniswapV2ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"contracts/P3DexERC20.sol\":191:3900  contract P3DexERC20 is IUniswapV2ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/P3DexERC20.sol\":191:3900  contract P3DexERC20 is IUniswapV2ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/P3DexERC20.sol\":266:284  string public name */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/P3DexERC20.sol\":266:284  string public name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/P3DexERC20.sol\":2283:2427  function approve(address spender, uint value) external returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":2283:2427  function approve(address spender, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_26\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/P3DexERC20.sol\":380:403  uint public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/P3DexERC20.sol\":2575:2930  function transferFrom(... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":2575:2930  function transferFrom(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_31\n      jump\t// in\n        /* \"contracts/P3DexERC20.sol\":665:781  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_7:\n      tag_27\n      tag_33\n      jump\t// in\n        /* \"contracts/P3DexERC20.sol\":339:374  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/P3DexERC20.sol\":524:555  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_27\n      tag_37\n      jump\t// in\n        /* \"contracts/P3DexERC20.sol\":409:450  mapping(address => uint) public balanceOf */\n    tag_10:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n        /* \"contracts/P3DexERC20.sol\":409:450  mapping(address => uint) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_40\n      jump\t// in\n        /* \"contracts/P3DexERC20.sol\":787:825  mapping(address => uint) public nonces */\n    tag_11:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n      pop\n        /* \"contracts/P3DexERC20.sol\":787:825  mapping(address => uint) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_43\n      jump\t// in\n        /* \"contracts/P3DexERC20.sol\":290:333  string public constant symbol = \"P3 Dex LP\" */\n    tag_12:\n      tag_18\n      tag_45\n      jump\t// in\n        /* \"contracts/P3DexERC20.sol\":2433:2569  function transfer(address to, uint value) external returns (bool) {... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":2433:2569  function transfer(address to, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_52\n      jump\t// in\n        /* \"contracts/P3DexERC20.sol\":2936:3898  function permit(... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":2936:3898  function permit(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/P3DexERC20.sol\":456:517  mapping(address => mapping(address => uint)) public allowance */\n    tag_15:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":456:517  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_58\n      jump\t// in\n        /* \"contracts/P3DexERC20.sol\":266:284  string public name */\n    tag_19:\n      0x00\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      0x01\n      dup6\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_59\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_60\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_59)\n    tag_60:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_61:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_61\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/P3DexERC20.sol\":2283:2427  function approve(address spender, uint value) external returns (bool) {... */\n    tag_26:\n        /* \"contracts/P3DexERC20.sol\":2347:2351  bool */\n      0x00\n        /* \"contracts/P3DexERC20.sol\":2363:2399  _approve(msg.sender, spender, value) */\n      tag_63\n        /* \"contracts/P3DexERC20.sol\":2372:2382  msg.sender */\n      caller\n        /* \"contracts/P3DexERC20.sol\":2384:2391  spender */\n      dup5\n        /* \"contracts/P3DexERC20.sol\":2393:2398  value */\n      dup5\n        /* \"contracts/P3DexERC20.sol\":2363:2371  _approve */\n      tag_64\n        /* \"contracts/P3DexERC20.sol\":2363:2399  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_63:\n      pop\n        /* \"contracts/P3DexERC20.sol\":2416:2420  true */\n      0x01\n        /* \"contracts/P3DexERC20.sol\":2283:2427  function approve(address spender, uint value) external returns (bool) {... */\n    tag_62:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/P3DexERC20.sol\":380:403  uint public totalSupply */\n    tag_28:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/P3DexERC20.sol\":2575:2930  function transferFrom(... */\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":2703:2718  allowance[from] */\n      dup4\n      and\n        /* \"contracts/P3DexERC20.sol\":2683:2687  bool */\n      0x00\n        /* \"contracts/P3DexERC20.sol\":2703:2718  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/P3DexERC20.sol\":2703:2712  allowance */\n      0x03\n        /* \"contracts/P3DexERC20.sol\":2703:2718  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/P3DexERC20.sol\":2719:2729  msg.sender */\n      caller\n        /* \"contracts/P3DexERC20.sol\":2703:2730  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"contracts/P3DexERC20.sol\":2703:2742  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"contracts/P3DexERC20.sol\":2699:2867  if (allowance[from][msg.sender] != uint(-1)) {... */\n      tag_66\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":2788:2803  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/P3DexERC20.sol\":2788:2797  allowance */\n      0x03\n        /* \"contracts/P3DexERC20.sol\":2788:2803  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/P3DexERC20.sol\":2804:2814  msg.sender */\n      caller\n        /* \"contracts/P3DexERC20.sol\":2788:2815  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/P3DexERC20.sol\":2788:2856  allowance[from][msg.sender].sub(... */\n      tag_67\n      swap1\n        /* \"contracts/P3DexERC20.sol\":2837:2842  value */\n      dup4\n        /* \"contracts/P3DexERC20.sol\":2788:2856  allowance[from][msg.sender].sub(... */\n      0xffffffff\n        /* \"contracts/P3DexERC20.sol\":2788:2819  allowance[from][msg.sender].sub */\n      tag_68\n        /* \"contracts/P3DexERC20.sol\":2788:2856  allowance[from][msg.sender].sub(... */\n      and\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":2758:2773  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/P3DexERC20.sol\":2758:2767  allowance */\n      0x03\n        /* \"contracts/P3DexERC20.sol\":2758:2773  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/P3DexERC20.sol\":2774:2784  msg.sender */\n      caller\n        /* \"contracts/P3DexERC20.sol\":2758:2785  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/P3DexERC20.sol\":2758:2856  allowance[from][msg.sender] = allowance[from][msg.sender].sub(... */\n      sstore\n        /* \"contracts/P3DexERC20.sol\":2699:2867  if (allowance[from][msg.sender] != uint(-1)) {... */\n    tag_66:\n        /* \"contracts/P3DexERC20.sol\":2876:2902  _transfer(from, to, value) */\n      tag_69\n        /* \"contracts/P3DexERC20.sol\":2886:2890  from */\n      dup5\n        /* \"contracts/P3DexERC20.sol\":2892:2894  to */\n      dup5\n        /* \"contracts/P3DexERC20.sol\":2896:2901  value */\n      dup5\n        /* \"contracts/P3DexERC20.sol\":2876:2885  _transfer */\n      tag_70\n        /* \"contracts/P3DexERC20.sol\":2876:2902  _transfer(from, to, value) */\n      jump\t// in\n    tag_69:\n      pop\n        /* \"contracts/P3DexERC20.sol\":2919:2923  true */\n      0x01\n        /* \"contracts/P3DexERC20.sol\":2575:2930  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/P3DexERC20.sol\":665:781  bytes32 public constant PERMIT_TYPEHASH =... */\n    tag_33:\n        /* \"contracts/P3DexERC20.sol\":715:781  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/P3DexERC20.sol\":665:781  bytes32 public constant PERMIT_TYPEHASH =... */\n      dup2\n      jump\t// out\n        /* \"contracts/P3DexERC20.sol\":339:374  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"contracts/P3DexERC20.sol\":372:374  18 */\n      0x12\n        /* \"contracts/P3DexERC20.sol\":339:374  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/P3DexERC20.sol\":524:555  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/P3DexERC20.sol\":409:450  mapping(address => uint) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/P3DexERC20.sol\":787:825  mapping(address => uint) public nonces */\n    tag_43:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/P3DexERC20.sol\":290:333  string public constant symbol = \"P3 Dex LP\" */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xbc, 0x0503320446578204c5)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/P3DexERC20.sol\":2433:2569  function transfer(address to, uint value) external returns (bool) {... */\n    tag_52:\n        /* \"contracts/P3DexERC20.sol\":2493:2497  bool */\n      0x00\n        /* \"contracts/P3DexERC20.sol\":2509:2541  _transfer(msg.sender, to, value) */\n      tag_63\n        /* \"contracts/P3DexERC20.sol\":2519:2529  msg.sender */\n      caller\n        /* \"contracts/P3DexERC20.sol\":2531:2533  to */\n      dup5\n        /* \"contracts/P3DexERC20.sol\":2535:2540  value */\n      dup5\n        /* \"contracts/P3DexERC20.sol\":2509:2518  _transfer */\n      tag_70\n        /* \"contracts/P3DexERC20.sol\":2509:2541  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"contracts/P3DexERC20.sol\":2936:3898  function permit(... */\n    tag_55:\n        /* \"contracts/P3DexERC20.sol\":3143:3158  block.timestamp */\n      timestamp\n        /* \"contracts/P3DexERC20.sol\":3131:3139  deadline */\n      dup5\n        /* \"contracts/P3DexERC20.sol\":3131:3158  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/P3DexERC20.sol\":3123:3181  require(deadline >= block.timestamp, \"UniswapV2: EXPIRED\") */\n      tag_74\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x155b9a5cddd85c158c8e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_74:\n        /* \"contracts/P3DexERC20.sol\":3293:3309  DOMAIN_SEPARATOR */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":3530:3543  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"contracts/P3DexERC20.sol\":3191:3205  bytes32 digest */\n      0x00\n        /* \"contracts/P3DexERC20.sol\":3530:3543  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/P3DexERC20.sol\":3530:3536  nonces */\n      0x05\n        /* \"contracts/P3DexERC20.sol\":3530:3543  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/P3DexERC20.sol\":3530:3545  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"contracts/P3DexERC20.sol\":3358:3601  abi.encode(... */\n      dup3\n      mload\n        /* \"contracts/P3DexERC20.sol\":715:781  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/P3DexERC20.sol\":3358:3601  abi.encode(... */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/P3DexERC20.sol\":3358:3601  abi.encode(... */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"contracts/P3DexERC20.sol\":3327:3619  keccak256(... */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"contracts/P3DexERC20.sol\":3231:3633  abi.encodePacked(... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"contracts/P3DexERC20.sol\":3231:3633  abi.encodePacked(... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"contracts/P3DexERC20.sol\":3208:3643  keccak256(... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"contracts/P3DexERC20.sol\":3680:3706  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"contracts/P3DexERC20.sol\":3191:3205  bytes32 digest */\n      swap2\n      swap4\n        /* \"contracts/P3DexERC20.sol\":3530:3545  nonces[owner]++ */\n      swap3\n        /* \"contracts/P3DexERC20.sol\":3680:3706  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"contracts/P3DexERC20.sol\":3530:3545  nonces[owner]++ */\n      dup6\n        /* \"contracts/P3DexERC20.sol\":3680:3706  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_75:\n      pop\n      pop\n        /* \"contracts/P3DexERC20.sol\":3680:3706  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":3737:3767  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/P3DexERC20.sol\":3737:3796  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_76\n      jumpi\n      pop\n        /* \"contracts/P3DexERC20.sol\":3791:3796  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":3771:3796  recoveredAddress == owner */\n      and\n        /* \"contracts/P3DexERC20.sol\":3771:3787  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":3771:3796  recoveredAddress == owner */\n      and\n      eq\n        /* \"contracts/P3DexERC20.sol\":3737:3796  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_76:\n        /* \"contracts/P3DexERC20.sol\":3716:3850  require(... */\n      tag_77\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x556e697377617056323a20494e56414c49445f5349474e415455524500000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_77:\n        /* \"contracts/P3DexERC20.sol\":3860:3891  _approve(owner, spender, value) */\n      tag_78\n        /* \"contracts/P3DexERC20.sol\":3869:3874  owner */\n      dup10\n        /* \"contracts/P3DexERC20.sol\":3876:3883  spender */\n      dup10\n        /* \"contracts/P3DexERC20.sol\":3885:3890  value */\n      dup10\n        /* \"contracts/P3DexERC20.sol\":3860:3868  _approve */\n      tag_64\n        /* \"contracts/P3DexERC20.sol\":3860:3891  _approve(owner, spender, value) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/P3DexERC20.sol\":2936:3898  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/P3DexERC20.sol\":456:517  mapping(address => mapping(address => uint)) public allowance */\n    tag_58:\n      0x03\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/P3DexERC20.sol\":1889:2055  function _approve(address owner, address spender, uint value) private {... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":1969:1985  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/P3DexERC20.sol\":1969:1978  allowance */\n      0x03\n        /* \"contracts/P3DexERC20.sol\":1969:1985  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/P3DexERC20.sol\":1969:1994  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/P3DexERC20.sol\":1969:2002  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/P3DexERC20.sol\":2017:2048  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/P3DexERC20.sol\":1889:2055  function _approve(address owner, address spender, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v2-core/contracts/libraries/SafeMath.sol\":287:414  function sub(uint x, uint y) internal pure returns (uint z) {... */\n    tag_68:\n        /* \"@uniswap/v2-core/contracts/libraries/SafeMath.sol\":370:375  x - y */\n      dup1\n      dup3\n      sub\n        /* \"@uniswap/v2-core/contracts/libraries/SafeMath.sol\":365:381  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"@uniswap/v2-core/contracts/libraries/SafeMath.sol\":357:407  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_62\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"contracts/P3DexERC20.sol\":2061:2277  function _transfer(address from, address to, uint value) private {... */\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":2154:2169  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/P3DexERC20.sol\":2154:2163  balanceOf */\n      0x02\n        /* \"contracts/P3DexERC20.sol\":2154:2169  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/P3DexERC20.sol\":2154:2180  balanceOf[from].sub(value) */\n      tag_83\n      swap1\n        /* \"contracts/P3DexERC20.sol\":2174:2179  value */\n      dup3\n        /* \"contracts/P3DexERC20.sol\":2154:2180  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"contracts/P3DexERC20.sol\":2154:2173  balanceOf[from].sub */\n      tag_68\n        /* \"contracts/P3DexERC20.sol\":2154:2180  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":2136:2151  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/P3DexERC20.sol\":2136:2145  balanceOf */\n      0x02\n        /* \"contracts/P3DexERC20.sol\":2136:2151  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/P3DexERC20.sol\":2136:2180  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/P3DexERC20.sol\":2206:2219  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/P3DexERC20.sol\":2206:2230  balanceOf[to].add(value) */\n      tag_84\n      swap1\n        /* \"contracts/P3DexERC20.sol\":2224:2229  value */\n      dup3\n        /* \"contracts/P3DexERC20.sol\":2206:2230  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"contracts/P3DexERC20.sol\":2206:2223  balanceOf[to].add */\n      tag_85\n        /* \"contracts/P3DexERC20.sol\":2206:2230  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/P3DexERC20.sol\":2190:2203  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/P3DexERC20.sol\":2190:2199  balanceOf */\n      0x02\n        /* \"contracts/P3DexERC20.sol\":2190:2203  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/P3DexERC20.sol\":2190:2230  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/P3DexERC20.sol\":2245:2270  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/P3DexERC20.sol\":2190:2203  balanceOf[to] */\n      swap2\n      swap4\n        /* \"contracts/P3DexERC20.sol\":2245:2270  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/P3DexERC20.sol\":2061:2277  function _transfer(address from, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v2-core/contracts/libraries/SafeMath.sol\":155:281  function add(uint x, uint y) internal pure returns (uint z) {... */\n    tag_85:\n        /* \"@uniswap/v2-core/contracts/libraries/SafeMath.sol\":238:243  x + y */\n      dup1\n      dup3\n      add\n        /* \"@uniswap/v2-core/contracts/libraries/SafeMath.sol\":233:249  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"@uniswap/v2-core/contracts/libraries/SafeMath.sol\":225:274  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_62\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n\n    auxdata: 0xa265627a7a72315820e4142aaad02b617bdf20673c9da13ccfe05b1a3ab6d2de3eae15915a9e4ab9f564736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040514690806052610a01823960520190506040518091039020600060405180828054600181600116156101000203166002900480156100885780601f10610066576101008083540402835291820191610088565b820191906000526020600020905b815481529060010190602001808311610074575b505060408051918290038220828201825260018352603160f81b602093840152815180840196909652858201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606086015260808501959095523060a0808601919091528551808603909101815260c0909401909452505080519101206004556108e9806101186000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b03813516906020013561039e565b604080519115158252519081900360200190f35b6101996103b5565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b038135811691602081013590911690604001356103bb565b610199610455565b6101f1610479565b6040805160ff9092168252519081900360200190f35b61019961047e565b6101996004803603602081101561022557600080fd5b50356001600160a01b0316610484565b6101996004803603602081101561024b57600080fd5b50356001600160a01b0316610496565b6100dc6104a8565b61017d6004803603604081101561027957600080fd5b506001600160a01b0381351690602001356104cd565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356104da565b005b610199600480360360408110156102f857600080fd5b506001600160a01b03813581169160200135166106dc565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b505050505081565b60006103ab3384846106f9565b5060015b92915050565b60015481565b6001600160a01b038316600090815260036020908152604080832033845290915281205460001914610440576001600160a01b038416600090815260036020908152604080832033845290915290205461041b908363ffffffff61075b16565b6001600160a01b03851660009081526003602090815260408083203384529091529020555b61044b8484846107ab565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60026020526000908152604090205481565b60056020526000908152604090205481565b604051806040016040528060098152602001680503320446578204c560bc1b81525081565b60006103ab3384846107ab565b42841015610524576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa15801561063f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106755750886001600160a01b0316816001600160a01b0316145b6106c6576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b6106d18989896106f9565b505050505050505050565b600360209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b808203828111156103af576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b0383166000908152600260205260409020546107d4908263ffffffff61075b16565b6001600160a01b038085166000908152600260205260408082209390935590841681522054610809908263ffffffff61086516565b6001600160a01b0380841660008181526002602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b808201828110156103af576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a72315820e4142aaad02b617bdf20673c9da13ccfe05b1a3ab6d2de3eae15915a9e4ab9f564736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0xA01 DUP3 CODECOPY PUSH1 0x52 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x88 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x88 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74 JUMPI JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP6 DUP3 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP1 SWAP5 MSTORE POP POP DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x4 SSTORE PUSH2 0x8E9 DUP1 PUSH2 0x118 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x199 PUSH2 0x455 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x484 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x496 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x4DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x396 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x396 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x379 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB CALLER DUP5 DUP5 PUSH2 0x6F9 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x440 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x41B SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x75B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x44B DUP5 DUP5 DUP5 PUSH2 0x7AB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x503320446578204C5 PUSH1 0xBC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB CALLER DUP5 DUP5 PUSH2 0x7AB JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x524 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x155B9A5CDDD85C158C8E8811561412549151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x675 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6C6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6D1 DUP10 DUP10 DUP10 PUSH2 0x6F9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x3AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7D4 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x75B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x809 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x865 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x3AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE4 EQ 0x2A 0xAA 0xD0 0x2B PUSH2 0x7BDF KECCAK256 PUSH8 0x3C9DA13CCFE05B1A GASPRICE 0xB6 0xD2 0xDE RETURNDATACOPY 0xAE ISZERO SWAP2 GAS SWAP15 0x4A 0xB9 CREATE2 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "191:3709:2:-;;;987:482;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1170:133:2;;1074:7;;1170:133;;;;;;;;;;;;;;;;1337:4;1321:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1321:22:2;;;;;;;;;1371:10;;;;;;;;-1:-1:-1;;;1371:10:2;;;;;1142:310;;;;;;;;;;;;;1361:21;1142:310;;;;;;;;;;;1433:4;1142:310;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1142:310:2;;;;;;;-1:-1:-1;;1119:343:2;;;;;1100:16;:362;191:3709;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b03813516906020013561039e565b604080519115158252519081900360200190f35b6101996103b5565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b038135811691602081013590911690604001356103bb565b610199610455565b6101f1610479565b6040805160ff9092168252519081900360200190f35b61019961047e565b6101996004803603602081101561022557600080fd5b50356001600160a01b0316610484565b6101996004803603602081101561024b57600080fd5b50356001600160a01b0316610496565b6100dc6104a8565b61017d6004803603604081101561027957600080fd5b506001600160a01b0381351690602001356104cd565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356104da565b005b610199600480360360408110156102f857600080fd5b506001600160a01b03813581169160200135166106dc565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b505050505081565b60006103ab3384846106f9565b5060015b92915050565b60015481565b6001600160a01b038316600090815260036020908152604080832033845290915281205460001914610440576001600160a01b038416600090815260036020908152604080832033845290915290205461041b908363ffffffff61075b16565b6001600160a01b03851660009081526003602090815260408083203384529091529020555b61044b8484846107ab565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60045481565b60026020526000908152604090205481565b60056020526000908152604090205481565b604051806040016040528060098152602001680503320446578204c560bc1b81525081565b60006103ab3384846107ab565b42841015610524576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6004546001600160a01b0380891660008181526005602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa15801561063f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106755750886001600160a01b0316816001600160a01b0316145b6106c6576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b6106d18989896106f9565b505050505050505050565b600360209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b808203828111156103af576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b0383166000908152600260205260409020546107d4908263ffffffff61075b16565b6001600160a01b038085166000908152600260205260408082209390935590841681522054610809908263ffffffff61086516565b6001600160a01b0380841660008181526002602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b808201828110156103af576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a72315820e4142aaad02b617bdf20673c9da13ccfe05b1a3ab6d2de3eae15915a9e4ab9f564736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x199 PUSH2 0x455 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x479 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x484 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x496 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x4DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x396 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x396 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x379 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB CALLER DUP5 DUP5 PUSH2 0x6F9 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x440 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x41B SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x75B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x44B DUP5 DUP5 DUP5 PUSH2 0x7AB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x503320446578204C5 PUSH1 0xBC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB CALLER DUP5 DUP5 PUSH2 0x7AB JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x524 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x155B9A5CDDD85C158C8E8811561412549151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x675 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x6C6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6D1 DUP10 DUP10 DUP10 PUSH2 0x6F9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x3AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7D4 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x75B AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x809 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x865 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x3AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE4 EQ 0x2A 0xAA 0xD0 0x2B PUSH2 0x7BDF KECCAK256 PUSH8 0x3C9DA13CCFE05B1A GASPRICE 0xB6 0xD2 0xDE RETURNDATACOPY 0xAE ISZERO SWAP2 GAS SWAP15 0x4A 0xB9 CREATE2 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "191:3709:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;191:3709:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;266:18:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2283:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2283:144:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;380:23;;;:::i;:::-;;;;;;;;;;;;;;;;2575:355;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2575:355:2;;;;;;;;;;;;;;;;;:::i;665:116::-;;;:::i;339:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;524:31;;;:::i;409:41::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;409:41:2;-1:-1:-1;;;;;409:41:2;;:::i;787:38::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;787:38:2;-1:-1:-1;;;;;787:38:2;;:::i;290:43::-;;;:::i;2433:136::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2433:136:2;;;;;;;;:::i;2936:962::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2936:962:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;456:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;456:61:2;;;;;;;;;;:::i;266:18::-;;;;;;;;;;;;;;;-1:-1:-1;;266:18:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2283:144::-;2347:4;2363:36;2372:10;2384:7;2393:5;2363:8;:36::i;:::-;-1:-1:-1;2416:4:2;2283:144;;;;;:::o;380:23::-;;;;:::o;2575:355::-;-1:-1:-1;;;;;2703:15:2;;2683:4;2703:15;;;:9;:15;;;;;;;;2719:10;2703:27;;;;;;;;-1:-1:-1;;2703:39:2;2699:168;;-1:-1:-1;;;;;2788:15:2;;;;;;:9;:15;;;;;;;;2804:10;2788:27;;;;;;;;:68;;2837:5;2788:68;:31;:68;:::i;:::-;-1:-1:-1;;;;;2758:15:2;;;;;;:9;:15;;;;;;;;2774:10;2758:27;;;;;;;:98;2699:168;2876:26;2886:4;2892:2;2896:5;2876:9;:26::i;:::-;-1:-1:-1;2919:4:2;2575:355;;;;;:::o;665:116::-;715:66;665:116;:::o;339:35::-;372:2;339:35;:::o;524:31::-;;;;:::o;409:41::-;;;;;;;;;;;;;:::o;787:38::-;;;;;;;;;;;;;:::o;290:43::-;;;;;;;;;;;;;;-1:-1:-1;;;290:43:2;;;;:::o;2433:136::-;2493:4;2509:32;2519:10;2531:2;2535:5;2509:9;:32::i;2936:962::-;3143:15;3131:8;:27;;3123:58;;;;;-1:-1:-1;;;3123:58:2;;;;;;;;;;;;-1:-1:-1;;;3123:58:2;;;;;;;;;;;;;;;3293:16;;-1:-1:-1;;;;;3530:13:2;;;3191:14;3530:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3358:243;;715:66;3358:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3358:243:2;;;;;3327:292;;;;;;-1:-1:-1;;;3231:402:2;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3231:402:2;;;;;;3208:435;;;;;;;;;3680:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3191:14;;3530:15;3680:26;;;;;-1:-1:-1;;3680:26:2;;;;;;;;;;3530:15;3680:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3680:26:2;;-1:-1:-1;;3680:26:2;;;-1:-1:-1;;;;;;;3737:30:2;;;;;;:59;;;3791:5;-1:-1:-1;;;;;3771:25:2;:16;-1:-1:-1;;;;;3771:25:2;;3737:59;3716:134;;;;;-1:-1:-1;;;3716:134:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;3860:31;3869:5;3876:7;3885:5;3860:8;:31::i;:::-;2936:962;;;;;;;;;:::o;456:61::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1889:166::-;-1:-1:-1;;;;;1969:16:2;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;2017:31;;;;;;;;;;;;;;;;;1889:166;;;:::o;287:127:1:-;370:5;;;365:16;;;;357:50;;;;;-1:-1:-1;;;357:50:1;;;;;;;;;;;;-1:-1:-1;;;357:50:1;;;;;;;;;;;;;;2061:216:2;-1:-1:-1;;;;;2154:15:2;;;;;;:9;:15;;;;;;:26;;2174:5;2154:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2136:15:2;;;;;;;:9;:15;;;;;;:44;;;;2206:13;;;;;;;:24;;2224:5;2206:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2190:13:2;;;;;;;:9;:13;;;;;;;;;:40;;;;2245:25;;;;;;;2190:13;;2245:25;;;;;;;;;;;;;2061:216;;;:::o;155:126:1:-;238:5;;;233:16;;;;225:49;;;;;-1:-1:-1;;;225:49:1;;;;;;;;;;;;-1:-1:-1;;;225:49:1;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "456200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1021",
								"PERMIT_TYPEHASH()": "287",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22343",
								"balanceOf(address)": "1169",
								"decimals()": "318",
								"name()": "infinite",
								"nonces(address)": "1191",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 191,
									"end": 3900,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 191,
									"end": 3900,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 191,
									"end": 3900,
									"name": "MSTORE"
								},
								{
									"begin": 987,
									"end": 1469,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "MLOAD"
								},
								{
									"begin": 1074,
									"end": 1081,
									"name": "CHAINID"
								},
								{
									"begin": 1074,
									"end": 1081,
									"name": "SWAP1"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "DUP1"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "DUP3"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "CODECOPY"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "ADD"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "SWAP1"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "POP"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "MLOAD"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "DUP1"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "SWAP2"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "SUB"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "SWAP1"
								},
								{
									"begin": 1170,
									"end": 1303,
									"name": "KECCAK256"
								},
								{
									"begin": 1337,
									"end": 1341,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "MLOAD"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SLOAD"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP2"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "AND"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "ISZERO"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "MUL"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SUB"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "AND"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DIV"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "ISZERO"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "JUMPI"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "LT"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "JUMPI"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP4"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SLOAD"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DIV"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "MUL"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP4"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "MSTORE"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SWAP2"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SWAP2"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "JUMP"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "JUMPDEST"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SWAP2"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "MSTORE"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "KECCAK256"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "JUMPDEST"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP2"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SLOAD"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP2"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "MSTORE"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "ADD"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP4"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "GT"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "JUMPI"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "MLOAD"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SWAP2"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SWAP1"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "SUB"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "DUP3"
								},
								{
									"begin": 1321,
									"end": 1343,
									"name": "KECCAK256"
								},
								{
									"begin": 1371,
									"end": 1381,
									"name": "DUP3"
								},
								{
									"begin": 1371,
									"end": 1381,
									"name": "DUP3"
								},
								{
									"begin": 1371,
									"end": 1381,
									"name": "ADD"
								},
								{
									"begin": 1371,
									"end": 1381,
									"name": "DUP3"
								},
								{
									"begin": 1371,
									"end": 1381,
									"name": "MSTORE"
								},
								{
									"begin": 1371,
									"end": 1381,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1371,
									"end": 1381,
									"name": "DUP4"
								},
								{
									"begin": 1371,
									"end": 1381,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1371,
									"end": 1381,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1371,
									"end": 1381,
									"name": "SWAP4"
								},
								{
									"begin": 1371,
									"end": 1381,
									"name": "DUP5"
								},
								{
									"begin": 1371,
									"end": 1381,
									"name": "ADD"
								},
								{
									"begin": 1371,
									"end": 1381,
									"name": "MSTORE"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "DUP2"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "MLOAD"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "DUP1"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "DUP5"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "SWAP7"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "SWAP7"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "MSTORE"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "DUP6"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "DUP3"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "MSTORE"
								},
								{
									"begin": 1361,
									"end": 1382,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "DUP7"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "MSTORE"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "DUP6"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "SWAP6"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "SWAP6"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "MSTORE"
								},
								{
									"begin": 1433,
									"end": 1437,
									"name": "ADDRESS"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "DUP1"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "DUP7"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "SWAP2"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "SWAP2"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "MSTORE"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "DUP6"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP7"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "SWAP5"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "ADD"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "SWAP1"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "SWAP5"
								},
								{
									"begin": 1142,
									"end": 1452,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1119,
									"end": 1462,
									"name": "DUP1"
								},
								{
									"begin": 1119,
									"end": 1462,
									"name": "MLOAD"
								},
								{
									"begin": 1119,
									"end": 1462,
									"name": "SWAP2"
								},
								{
									"begin": 1119,
									"end": 1462,
									"name": "ADD"
								},
								{
									"begin": 1119,
									"end": 1462,
									"name": "KECCAK256"
								},
								{
									"begin": 1100,
									"end": 1116,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1100,
									"end": 1462,
									"name": "SSTORE"
								},
								{
									"begin": 191,
									"end": 3900,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 3900,
									"name": "DUP1"
								},
								{
									"begin": 191,
									"end": 3900,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 3900,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 191,
									"end": 3900,
									"name": "CODECOPY"
								},
								{
									"begin": 191,
									"end": 3900,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 191,
									"end": 3900,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820e4142aaad02b617bdf20673c9da13ccfe05b1a3ab6d2de3eae15915a9e4ab9f564736f6c63430005100032",
									".code": [
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "MSTORE"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "POP"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "LT"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "SHR"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "GT"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "GT"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMP"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPDEST"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMP"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPDEST"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPI"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "JUMPDEST"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 3900,
											"name": "REVERT"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP6"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMPI"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "EXP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "NOT"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "RETURN"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "JUMPDEST"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "DUP1"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "DUP2"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "AND"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "SWAP1"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "ADD"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "JUMPDEST"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "DUP1"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "MLOAD"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "SWAP2"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "ISZERO"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "ISZERO"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "DUP3"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "MSTORE"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "MLOAD"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "SWAP1"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "DUP2"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "SWAP1"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "SUB"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "ADD"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "SWAP1"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "RETURN"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "JUMPDEST"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "JUMPDEST"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "MLOAD"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SWAP2"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "DUP3"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "MSTORE"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "MLOAD"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SWAP1"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "DUP2"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SWAP1"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "ADD"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SWAP1"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "RETURN"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "JUMPDEST"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "DUP1"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "DUP2"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "DUP2"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "AND"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "SWAP2"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "DUP2"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "ADD"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "SWAP1"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "SWAP2"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "AND"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "SWAP1"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "ADD"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 781,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 665,
											"end": 781,
											"name": "JUMPDEST"
										},
										{
											"begin": 665,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 665,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 665,
											"end": 781,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "MLOAD"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SWAP3"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "AND"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "DUP3"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "MSTORE"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "MLOAD"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SUB"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "RETURN"
										},
										{
											"begin": 524,
											"end": 555,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 524,
											"end": 555,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 555,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 524,
											"end": 555,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 524,
											"end": 555,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "JUMPDEST"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "DUP1"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "AND"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "JUMPDEST"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "DUP1"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "AND"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "JUMPDEST"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "DUP1"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "DUP2"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "AND"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "SWAP1"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "ADD"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "JUMPDEST"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "DUP1"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "AND"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "SWAP2"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "SWAP1"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "SWAP2"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "AND"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "SWAP1"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "SWAP1"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "SWAP1"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "DUP3"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "AND"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "SWAP1"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "DUP2"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "SWAP1"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "ADD"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "JUMPDEST"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "STOP"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "DUP1"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "AND"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "SWAP2"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "ADD"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "AND"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SLOAD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MLOAD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP6"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP5"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DIV"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP5"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DIV"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP5"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MUL"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP5"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ISZERO"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMPI"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "LT"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMPI"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SLOAD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DIV"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MUL"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "KECCAK256"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SLOAD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "MSTORE"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP4"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "GT"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMPI"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP1"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SUB"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "AND"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP3"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "ADD"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "SWAP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMPDEST"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "POP"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "DUP2"
										},
										{
											"begin": 266,
											"end": 284,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "JUMPDEST"
										},
										{
											"begin": 2347,
											"end": 2351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2399,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2372,
											"end": 2382,
											"name": "CALLER"
										},
										{
											"begin": 2384,
											"end": 2391,
											"name": "DUP5"
										},
										{
											"begin": 2393,
											"end": 2398,
											"name": "DUP5"
										},
										{
											"begin": 2363,
											"end": 2371,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2363,
											"end": 2399,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2363,
											"end": 2399,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2363,
											"end": 2399,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2416,
											"end": 2420,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "JUMPDEST"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "SWAP3"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "SWAP2"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "POP"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "POP"
										},
										{
											"begin": 2283,
											"end": 2427,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "JUMPDEST"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SLOAD"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "DUP2"
										},
										{
											"begin": 380,
											"end": 403,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "DUP4"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "AND"
										},
										{
											"begin": 2683,
											"end": 2687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "SWAP1"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "DUP2"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "MSTORE"
										},
										{
											"begin": 2703,
											"end": 2712,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "SWAP1"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "DUP2"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "MSTORE"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "DUP1"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "DUP4"
										},
										{
											"begin": 2703,
											"end": 2718,
											"name": "KECCAK256"
										},
										{
											"begin": 2719,
											"end": 2729,
											"name": "CALLER"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "DUP5"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "MSTORE"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "MSTORE"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "KECCAK256"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2703,
											"end": 2742,
											"name": "EQ"
										},
										{
											"begin": 2699,
											"end": 2867,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2699,
											"end": 2867,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "DUP5"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "AND"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "DUP2"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "MSTORE"
										},
										{
											"begin": 2788,
											"end": 2797,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "DUP2"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "MSTORE"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "DUP1"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "DUP4"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "KECCAK256"
										},
										{
											"begin": 2804,
											"end": 2814,
											"name": "CALLER"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "DUP5"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "MSTORE"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "SWAP2"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "MSTORE"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "KECCAK256"
										},
										{
											"begin": 2788,
											"end": 2815,
											"name": "SLOAD"
										},
										{
											"begin": 2788,
											"end": 2856,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2788,
											"end": 2856,
											"name": "SWAP1"
										},
										{
											"begin": 2837,
											"end": 2842,
											"name": "DUP4"
										},
										{
											"begin": 2788,
											"end": 2856,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2788,
											"end": 2819,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2788,
											"end": 2856,
											"name": "AND"
										},
										{
											"begin": 2788,
											"end": 2856,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2788,
											"end": 2856,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2788,
											"end": 2856,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "DUP6"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "AND"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "SWAP1"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "DUP2"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "MSTORE"
										},
										{
											"begin": 2758,
											"end": 2767,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "SWAP1"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "DUP2"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "MSTORE"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "DUP1"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "DUP4"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "KECCAK256"
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "CALLER"
										},
										{
											"begin": 2758,
											"end": 2785,
											"name": "DUP5"
										},
										{
											"begin": 2758,
											"end": 2785,
											"name": "MSTORE"
										},
										{
											"begin": 2758,
											"end": 2785,
											"name": "SWAP1"
										},
										{
											"begin": 2758,
											"end": 2785,
											"name": "SWAP2"
										},
										{
											"begin": 2758,
											"end": 2785,
											"name": "MSTORE"
										},
										{
											"begin": 2758,
											"end": 2785,
											"name": "SWAP1"
										},
										{
											"begin": 2758,
											"end": 2785,
											"name": "KECCAK256"
										},
										{
											"begin": 2758,
											"end": 2856,
											"name": "SSTORE"
										},
										{
											"begin": 2699,
											"end": 2867,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2699,
											"end": 2867,
											"name": "JUMPDEST"
										},
										{
											"begin": 2876,
											"end": 2902,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2886,
											"end": 2890,
											"name": "DUP5"
										},
										{
											"begin": 2892,
											"end": 2894,
											"name": "DUP5"
										},
										{
											"begin": 2896,
											"end": 2901,
											"name": "DUP5"
										},
										{
											"begin": 2876,
											"end": 2885,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2876,
											"end": 2902,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2876,
											"end": 2902,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2876,
											"end": 2902,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2919,
											"end": 2923,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "SWAP4"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "SWAP3"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "POP"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "POP"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "POP"
										},
										{
											"begin": 2575,
											"end": 2930,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 665,
											"end": 781,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 665,
											"end": 781,
											"name": "JUMPDEST"
										},
										{
											"begin": 715,
											"end": 781,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 665,
											"end": 781,
											"name": "DUP2"
										},
										{
											"begin": 665,
											"end": 781,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "JUMPDEST"
										},
										{
											"begin": 372,
											"end": 374,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 374,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 524,
											"end": 555,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 524,
											"end": 555,
											"name": "JUMPDEST"
										},
										{
											"begin": 524,
											"end": 555,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 524,
											"end": 555,
											"name": "SLOAD"
										},
										{
											"begin": 524,
											"end": 555,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 555,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "JUMPDEST"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "MSTORE"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "SWAP1"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "DUP2"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "MSTORE"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "SWAP1"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "KECCAK256"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "SLOAD"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "DUP2"
										},
										{
											"begin": 409,
											"end": 450,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "JUMPDEST"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "MSTORE"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "SWAP1"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "DUP2"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "MSTORE"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "SWAP1"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "KECCAK256"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "SLOAD"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "DUP2"
										},
										{
											"begin": 787,
											"end": 825,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "JUMPDEST"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "MLOAD"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "ADD"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "MSTORE"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "DUP1"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "DUP2"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "MSTORE"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "503320446578204C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "BC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "DUP2"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "MSTORE"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "DUP2"
										},
										{
											"begin": 290,
											"end": 333,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2433,
											"end": 2569,
											"name": "JUMPDEST"
										},
										{
											"begin": 2493,
											"end": 2497,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2519,
											"end": 2529,
											"name": "CALLER"
										},
										{
											"begin": 2531,
											"end": 2533,
											"name": "DUP5"
										},
										{
											"begin": 2535,
											"end": 2540,
											"name": "DUP5"
										},
										{
											"begin": 2509,
											"end": 2518,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2509,
											"end": 2541,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "JUMPDEST"
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3131,
											"end": 3139,
											"name": "DUP5"
										},
										{
											"begin": 3131,
											"end": 3158,
											"name": "LT"
										},
										{
											"begin": 3131,
											"end": 3158,
											"name": "ISZERO"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "JUMPI"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "DUP1"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "DUP2"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "MSTORE"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "DUP3"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "ADD"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "MSTORE"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "DUP3"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "ADD"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "155B9A5CDDD85C158C8E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "DUP3"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "ADD"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "MSTORE"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "SWAP1"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "MLOAD"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "SWAP1"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "DUP2"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "SWAP1"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "SUB"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "ADD"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "SWAP1"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "REVERT"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3123,
											"end": 3181,
											"name": "JUMPDEST"
										},
										{
											"begin": 3293,
											"end": 3309,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3293,
											"end": 3309,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "DUP1"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "DUP10"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "AND"
										},
										{
											"begin": 3191,
											"end": 3205,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "DUP2"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "DUP2"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "MSTORE"
										},
										{
											"begin": 3530,
											"end": 3536,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "SWAP1"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "DUP2"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "MSTORE"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "DUP1"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "DUP4"
										},
										{
											"begin": 3530,
											"end": 3543,
											"name": "KECCAK256"
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "DUP1"
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "SLOAD"
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "DUP1"
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "DUP3"
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "ADD"
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "SWAP1"
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "SWAP3"
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "SSTORE"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP3"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "MLOAD"
										},
										{
											"begin": 715,
											"end": 781,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP2"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP7"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "ADD"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "MSTORE"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP1"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP5"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "ADD"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "SWAP7"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "SWAP1"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "SWAP7"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "MSTORE"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "SWAP6"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP14"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "AND"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP7"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "ADD"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "MSTORE"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP6"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "ADD"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP13"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "SWAP1"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "MSTORE"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP6"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "ADD"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "SWAP6"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "SWAP1"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "SWAP6"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "MSTORE"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP1"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP6"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "ADD"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP12"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "SWAP1"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "MSTORE"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP2"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP6"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "ADD"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "DUP3"
										},
										{
											"begin": 3358,
											"end": 3601,
											"name": "MSTORE"
										},
										{
											"begin": 3327,
											"end": 3619,
											"name": "DUP1"
										},
										{
											"begin": 3327,
											"end": 3619,
											"name": "MLOAD"
										},
										{
											"begin": 3327,
											"end": 3619,
											"name": "SWAP1"
										},
										{
											"begin": 3327,
											"end": 3619,
											"name": "DUP4"
										},
										{
											"begin": 3327,
											"end": 3619,
											"name": "ADD"
										},
										{
											"begin": 3327,
											"end": 3619,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "DUP7"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "ADD"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "MSTORE"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "DUP6"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "ADD"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "SWAP7"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "SWAP1"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "SWAP7"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "MSTORE"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "DUP1"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "DUP6"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "ADD"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "SWAP7"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "SWAP1"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "SWAP7"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "MSTORE"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "DUP1"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "DUP5"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "ADD"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "DUP1"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "DUP3"
										},
										{
											"begin": 3231,
											"end": 3633,
											"name": "MSTORE"
										},
										{
											"begin": 3208,
											"end": 3643,
											"name": "DUP7"
										},
										{
											"begin": 3208,
											"end": 3643,
											"name": "MLOAD"
										},
										{
											"begin": 3208,
											"end": 3643,
											"name": "SWAP7"
										},
										{
											"begin": 3208,
											"end": 3643,
											"name": "DUP4"
										},
										{
											"begin": 3208,
											"end": 3643,
											"name": "ADD"
										},
										{
											"begin": 3208,
											"end": 3643,
											"name": "SWAP7"
										},
										{
											"begin": 3208,
											"end": 3643,
											"name": "SWAP1"
										},
										{
											"begin": 3208,
											"end": 3643,
											"name": "SWAP7"
										},
										{
											"begin": 3208,
											"end": 3643,
											"name": "KECCAK256"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP6"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP4"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP1"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "MSTORE"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP5"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "ADD"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP1"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP3"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "MSTORE"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP7"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP1"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "MSTORE"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP10"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "AND"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP6"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "ADD"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "MSTORE"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP5"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "ADD"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP9"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP1"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "MSTORE"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP5"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "ADD"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP8"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP1"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "MSTORE"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "MLOAD"
										},
										{
											"begin": 3191,
											"end": 3205,
											"name": "SWAP2"
										},
										{
											"begin": 3191,
											"end": 3205,
											"name": "SWAP4"
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "SWAP3"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP1"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP3"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "ADD"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP2"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "ADD"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP3"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "DUP2"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP1"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SUB"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP1"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP2"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "ADD"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP1"
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "DUP6"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "GAS"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "STATICCALL"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "ADD"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "MLOAD"
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3737,
											"end": 3767,
											"name": "DUP2"
										},
										{
											"begin": 3737,
											"end": 3767,
											"name": "AND"
										},
										{
											"begin": 3737,
											"end": 3767,
											"name": "ISZERO"
										},
										{
											"begin": 3737,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3737,
											"end": 3767,
											"name": "ISZERO"
										},
										{
											"begin": 3737,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3737,
											"end": 3796,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 3737,
											"end": 3796,
											"name": "JUMPI"
										},
										{
											"begin": 3737,
											"end": 3796,
											"name": "POP"
										},
										{
											"begin": 3791,
											"end": 3796,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3771,
											"end": 3796,
											"name": "AND"
										},
										{
											"begin": 3771,
											"end": 3787,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3771,
											"end": 3796,
											"name": "AND"
										},
										{
											"begin": 3771,
											"end": 3796,
											"name": "EQ"
										},
										{
											"begin": 3737,
											"end": 3796,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 3737,
											"end": 3796,
											"name": "JUMPDEST"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "JUMPI"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "DUP1"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "DUP2"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "MSTORE"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "DUP3"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "ADD"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "MSTORE"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "DUP3"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "ADD"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "MSTORE"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "PUSH",
											"value": "556E697377617056323A20494E56414C49445F5349474E415455524500000000"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "DUP3"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "ADD"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "MSTORE"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "SWAP1"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "MLOAD"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "SWAP1"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "DUP2"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "SWAP1"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "SUB"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "ADD"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "SWAP1"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "REVERT"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 3716,
											"end": 3850,
											"name": "JUMPDEST"
										},
										{
											"begin": 3860,
											"end": 3891,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 3869,
											"end": 3874,
											"name": "DUP10"
										},
										{
											"begin": 3876,
											"end": 3883,
											"name": "DUP10"
										},
										{
											"begin": 3885,
											"end": 3890,
											"name": "DUP10"
										},
										{
											"begin": 3860,
											"end": 3868,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 3860,
											"end": 3891,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3860,
											"end": 3891,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3860,
											"end": 3891,
											"name": "JUMPDEST"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "POP"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "POP"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "POP"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "POP"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "POP"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "POP"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "POP"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "POP"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "POP"
										},
										{
											"begin": 2936,
											"end": 3898,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "SWAP1"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "MSTORE"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "SWAP3"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "DUP4"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "MSTORE"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "DUP1"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "DUP5"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "KECCAK256"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "SWAP1"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "SWAP2"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "MSTORE"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "SWAP1"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "DUP3"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "MSTORE"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "SWAP1"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "KECCAK256"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "SLOAD"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 456,
											"end": 517,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1889,
											"end": 2055,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1889,
											"end": 2055,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "DUP1"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "DUP5"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "AND"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "DUP2"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "DUP2"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "MSTORE"
										},
										{
											"begin": 1969,
											"end": 1978,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "SWAP1"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "DUP2"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "MSTORE"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "DUP1"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "DUP4"
										},
										{
											"begin": 1969,
											"end": 1985,
											"name": "KECCAK256"
										},
										{
											"begin": 1969,
											"end": 1994,
											"name": "SWAP5"
										},
										{
											"begin": 1969,
											"end": 1994,
											"name": "DUP8"
										},
										{
											"begin": 1969,
											"end": 1994,
											"name": "AND"
										},
										{
											"begin": 1969,
											"end": 1994,
											"name": "DUP1"
										},
										{
											"begin": 1969,
											"end": 1994,
											"name": "DUP5"
										},
										{
											"begin": 1969,
											"end": 1994,
											"name": "MSTORE"
										},
										{
											"begin": 1969,
											"end": 1994,
											"name": "SWAP5"
										},
										{
											"begin": 1969,
											"end": 1994,
											"name": "DUP3"
										},
										{
											"begin": 1969,
											"end": 1994,
											"name": "MSTORE"
										},
										{
											"begin": 1969,
											"end": 1994,
											"name": "SWAP2"
										},
										{
											"begin": 1969,
											"end": 1994,
											"name": "DUP3"
										},
										{
											"begin": 1969,
											"end": 1994,
											"name": "SWAP1"
										},
										{
											"begin": 1969,
											"end": 1994,
											"name": "KECCAK256"
										},
										{
											"begin": 1969,
											"end": 2002,
											"name": "DUP6"
										},
										{
											"begin": 1969,
											"end": 2002,
											"name": "SWAP1"
										},
										{
											"begin": 1969,
											"end": 2002,
											"name": "SSTORE"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "DUP2"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "MLOAD"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "DUP6"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "DUP2"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "MSTORE"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "MLOAD"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "SWAP3"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "DUP2"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "SUB"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "SWAP2"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2048,
											"name": "LOG3"
										},
										{
											"begin": 1889,
											"end": 2055,
											"name": "POP"
										},
										{
											"begin": 1889,
											"end": 2055,
											"name": "POP"
										},
										{
											"begin": 1889,
											"end": 2055,
											"name": "POP"
										},
										{
											"begin": 1889,
											"end": 2055,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 414,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 287,
											"end": 414,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "DUP1"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "DUP3"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SUB"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "DUP3"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "DUP2"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "GT"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "ISZERO"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "JUMPI"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP3"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP3"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP3"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MLOAD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SUB"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "REVERT"
										},
										{
											"begin": 2061,
											"end": 2277,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 2061,
											"end": 2277,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "DUP4"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "AND"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "SWAP1"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "DUP2"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "MSTORE"
										},
										{
											"begin": 2154,
											"end": 2163,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "MSTORE"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "SWAP1"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "KECCAK256"
										},
										{
											"begin": 2154,
											"end": 2169,
											"name": "SLOAD"
										},
										{
											"begin": 2154,
											"end": 2180,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2154,
											"end": 2180,
											"name": "SWAP1"
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "DUP3"
										},
										{
											"begin": 2154,
											"end": 2180,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2154,
											"end": 2180,
											"name": "AND"
										},
										{
											"begin": 2154,
											"end": 2180,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2180,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2154,
											"end": 2180,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "DUP1"
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "DUP6"
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "AND"
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "SWAP1"
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "DUP2"
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "MSTORE"
										},
										{
											"begin": 2136,
											"end": 2145,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "MSTORE"
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "DUP1"
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "DUP3"
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "KECCAK256"
										},
										{
											"begin": 2136,
											"end": 2180,
											"name": "SWAP4"
										},
										{
											"begin": 2136,
											"end": 2180,
											"name": "SWAP1"
										},
										{
											"begin": 2136,
											"end": 2180,
											"name": "SWAP4"
										},
										{
											"begin": 2136,
											"end": 2180,
											"name": "SSTORE"
										},
										{
											"begin": 2206,
											"end": 2219,
											"name": "SWAP1"
										},
										{
											"begin": 2206,
											"end": 2219,
											"name": "DUP5"
										},
										{
											"begin": 2206,
											"end": 2219,
											"name": "AND"
										},
										{
											"begin": 2206,
											"end": 2219,
											"name": "DUP2"
										},
										{
											"begin": 2206,
											"end": 2219,
											"name": "MSTORE"
										},
										{
											"begin": 2206,
											"end": 2219,
											"name": "KECCAK256"
										},
										{
											"begin": 2206,
											"end": 2219,
											"name": "SLOAD"
										},
										{
											"begin": 2206,
											"end": 2230,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2206,
											"end": 2230,
											"name": "SWAP1"
										},
										{
											"begin": 2224,
											"end": 2229,
											"name": "DUP3"
										},
										{
											"begin": 2206,
											"end": 2230,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2206,
											"end": 2223,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2206,
											"end": 2230,
											"name": "AND"
										},
										{
											"begin": 2206,
											"end": 2230,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2206,
											"end": 2230,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2206,
											"end": 2230,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "DUP1"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "DUP5"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "AND"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "DUP2"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "DUP2"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "MSTORE"
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "SWAP1"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "DUP2"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "MSTORE"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "SWAP2"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "DUP3"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "SWAP1"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "KECCAK256"
										},
										{
											"begin": 2190,
											"end": 2230,
											"name": "SWAP5"
										},
										{
											"begin": 2190,
											"end": 2230,
											"name": "SWAP1"
										},
										{
											"begin": 2190,
											"end": 2230,
											"name": "SWAP5"
										},
										{
											"begin": 2190,
											"end": 2230,
											"name": "SSTORE"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "DUP1"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "MLOAD"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "DUP6"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "DUP2"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "MSTORE"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "MLOAD"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "SWAP2"
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "SWAP4"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "SWAP3"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "DUP8"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "AND"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "SWAP3"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "SWAP3"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "SWAP2"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "DUP3"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "SUB"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "ADD"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "SWAP1"
										},
										{
											"begin": 2245,
											"end": 2270,
											"name": "LOG3"
										},
										{
											"begin": 2061,
											"end": 2277,
											"name": "POP"
										},
										{
											"begin": 2061,
											"end": 2277,
											"name": "POP"
										},
										{
											"begin": 2061,
											"end": 2277,
											"name": "POP"
										},
										{
											"begin": 2061,
											"end": 2277,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 243,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 243,
											"name": "DUP3"
										},
										{
											"begin": 238,
											"end": 243,
											"name": "ADD"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "DUP3"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "DUP2"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "LT"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "ISZERO"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "JUMPI"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "REVERT"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/P3DexERC20.sol\":\"P3DexERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x9e433765e9ef7b4ff5e406b260b222c47c2aa27d36df756db708064fcb239ae7\",\"urls\":[\"bzz-raw://5b67c24a5e1652b51ad2f37adad2905519f0e05e7c8b2b4d8b3e00b429bb9213\",\"dweb:/ipfs/QmarJq43GabAGGSqtMUb87ACYQt73mSFbXKyFAPDXpbFNM\"]},\"@uniswap/v2-core/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x9c8465de751317860b623cd77f7f53f41a84b6624c0580ee526dcf7a2b7cb80c\",\"urls\":[\"bzz-raw://9b371b3eb0649b486f76cd628cc060354d1ac11fa8baed1170567271655f05d7\",\"dweb:/ipfs/QmTUg31wK9UyX6o1Q1mxE4DQhuc1rWGBanNTu1uagNVQB6\"]},\"contracts/P3DexERC20.sol\":{\"keccak256\":\"0x73327189fc77ba776a5581ca8f9dfd708298a3f370aed5d76a4b0c1ad0ddcccf\",\"urls\":[\"bzz-raw://1685ad48b8b0729d2f57abc00a8329de8cbd7ae56c3255da3696a314feff06c6\",\"dweb:/ipfs/QmPebJMW7BX6AbjmjGtn8C1YkV4RNz4Nofaw3xWySYyZCD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 203,
								"contract": "contracts/P3DexERC20.sol:P3DexERC20",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 211,
								"contract": "contracts/P3DexERC20.sol:P3DexERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "contracts/P3DexERC20.sol:P3DexERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 221,
								"contract": "contracts/P3DexERC20.sol:P3DexERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 223,
								"contract": "contracts/P3DexERC20.sol:P3DexERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "4",
								"type": "t_bytes32"
							},
							{
								"astId": 230,
								"contract": "contracts/P3DexERC20.sol:P3DexERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2ERC20.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2ERC20.sol",
					"exportedSymbols": {
						"IUniswapV2ERC20": [
							117
						]
					},
					"id": 118,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IUniswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 9,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "73:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "73:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "96:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "96:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "121:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "121:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "72:60:0"
									},
									"src": "58:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 17,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "153:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "175:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "195:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "195:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "152:54:0"
									},
									"src": "138:69:0"
								},
								{
									"body": null,
									"documentation": null,
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "252:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 19,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "251:15:0"
									},
									"scope": 117,
									"src": "213:54:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 27,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "313:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "313:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "312:15:0"
									},
									"scope": 117,
									"src": "272:56:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "376:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 29,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "376:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "375:7:0"
									},
									"scope": 117,
									"src": "333:50:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "434:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "433:6:0"
									},
									"scope": 117,
									"src": "388:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "464:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "463:15:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "502:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "502:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "501:6:0"
									},
									"scope": 117,
									"src": "445:63:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "532:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "547:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "531:32:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "587:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "587:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "586:6:0"
									},
									"scope": 117,
									"src": "513:80:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "616:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "633:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "633:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "615:29:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "663:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "663:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "662:6:0"
									},
									"scope": 117,
									"src": "599:70:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "692:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "704:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "704:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:24:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "734:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "734:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "733:6:0"
									},
									"scope": 117,
									"src": "674:66:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "767:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "781:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "793:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "793:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:38:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "823:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 79,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "823:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "822:6:0"
									},
									"scope": 117,
									"src": "745:84:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "886:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 84,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "885:9:0"
									},
									"scope": 117,
									"src": "835:60:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:2:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "950:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 89,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "949:9:0"
									},
									"scope": 117,
									"src": "900:59:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "980:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "979:15:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1018:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1018:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1017:6:0"
									},
									"scope": 117,
									"src": "964:60:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1046:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1061:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1078:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1078:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1090:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1090:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1105:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 108,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1105:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1114:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1125:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1045:90:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:0:0"
									},
									"scope": 117,
									"src": "1030:115:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "26:1121:0"
						}
					],
					"src": "0:1148:0"
				},
				"id": 0
			},
			"@uniswap/v2-core/contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-core/contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							192
						]
					},
					"id": 193,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 192,
							"linearizedBaseContracts": [
								192
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "215:66:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 129,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 126,
																			"src": "234:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 130,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 121,
																				"src": "238:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 131,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 123,
																				"src": "242:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "238:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "234:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 134,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "233:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 135,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "248:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "233:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "251:22:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															594,
															595
														],
														"referencedDeclaration": 595,
														"src": "225:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "225:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "225:49:1"
											}
										]
									},
									"documentation": null,
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "168:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "168:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "176:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "176:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "167:16:1"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "207:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "207:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "206:8:1"
									},
									"scope": 192,
									"src": "155:126:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "347:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 151,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "366:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 152,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 143,
																				"src": "370:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 153,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 145,
																				"src": "374:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "370:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "366:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 156,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "365:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 157,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "380:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "365:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "383:23:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															594,
															595
														],
														"referencedDeclaration": 595,
														"src": "357:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "357:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "357:50:1"
											}
										]
									},
									"documentation": null,
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "300:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "308:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "299:16:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "339:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "339:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "338:8:1"
									},
									"scope": 192,
									"src": "287:127:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "480:80:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 173,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "498:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "503:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "498:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 180,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 176,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 170,
																					"src": "509:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 177,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 165,
																						"src": "513:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 178,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 167,
																						"src": "517:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "513:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "509:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 181,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "508:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 182,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "522:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "508:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 184,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "527:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "508:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "498:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "530:22:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															594,
															595
														],
														"referencedDeclaration": 595,
														"src": "490:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "490:63:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "490:63:1"
											}
										]
									},
									"documentation": null,
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "433:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "441:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "441:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "432:16:1"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "472:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "472:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "471:8:1"
									},
									"scope": 192,
									"src": "420:140:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 193,
							"src": "132:430:1"
						}
					],
					"src": "0:563:1"
				},
				"id": 1
			},
			"contracts/P3DexERC20.sol": {
				"ast": {
					"absolutePath": "contracts/P3DexERC20.sol",
					"exportedSymbols": {
						"P3DexERC20": [
							576
						]
					},
					"id": 577,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 194,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:2"
						},
						{
							"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2ERC20.sol",
							"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2ERC20.sol",
							"id": 195,
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 118,
							"src": "62:67:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-core/contracts/libraries/SafeMath.sol",
							"file": "@uniswap/v2-core/contracts/libraries/SafeMath.sol",
							"id": 196,
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 193,
							"src": "130:59:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 197,
										"name": "IUniswapV2ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 117,
										"src": "214:15:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2ERC20_$117",
											"typeString": "contract IUniswapV2ERC20"
										}
									},
									"id": 198,
									"nodeType": "InheritanceSpecifier",
									"src": "214:15:2"
								}
							],
							"contractDependencies": [
								117
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 576,
							"linearizedBaseContracts": [
								576,
								117
							],
							"name": "P3DexERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 201,
									"libraryName": {
										"contractScope": null,
										"id": 199,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 192,
										"src": "242:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$192",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "236:24:2",
									"typeName": {
										"id": 200,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "255:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 203,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "266:18:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 202,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "266:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 206,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "290:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 204,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "290:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "503320446578204c50",
										"id": 205,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "322:11:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ac535cba09ec1bfa8c80a85aeb1128aaf89dc662b2f28603531bd52a32eb9265",
											"typeString": "literal_string \"P3 Dex LP\""
										},
										"value": "P3 Dex LP"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 209,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "339:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 207,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "339:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 208,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "372:2:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 211,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "380:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 210,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "380:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 215,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "409:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 214,
										"keyType": {
											"id": 212,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "417:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "409:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 213,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "428:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 221,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "456:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 220,
										"keyType": {
											"id": 216,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "464:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "456:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 219,
											"keyType": {
												"id": 217,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "483:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "475:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 218,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "494:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 223,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "524:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 222,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "524:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 226,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "665:116:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 224,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "665:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "715:66:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 230,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "787:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 229,
										"keyType": {
											"id": 227,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "795:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "787:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 228,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "806:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 238,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "847:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "870:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "895:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "895:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:60:2"
									},
									"src": "832:75:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 246,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "927:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "949:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "969:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "926:54:2"
									},
									"src": "912:69:2"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "1008:461:2",
										"statements": [
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 278,
														"src": "1018:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1018:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1018:12:2"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 250,
															"isOffset": false,
															"isSlot": false,
															"src": "1063:7:2",
															"valueSize": 1
														}
													}
												],
												"id": 252,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "1040:51:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 253,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "1100:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1201:84:2",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 257,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 585,
																			"src": "1170:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1170:133:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 262,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 203,
																						"src": "1337:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					],
																					"id": 261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1331:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1331:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_storage_ptr",
																					"typeString": "bytes storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_storage_ptr",
																					"typeString": "bytes storage pointer"
																				}
																			],
																			"id": 260,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 585,
																			"src": "1321:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1321:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 267,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1377:3:2",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1371:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1371:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 265,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 585,
																			"src": "1361:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1361:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 270,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 250,
																		"src": "1400:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 272,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 609,
																				"src": "1433:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_P3DexERC20_$576",
																					"typeString": "contract P3DexERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_P3DexERC20_$576",
																					"typeString": "contract P3DexERC20"
																				}
																			],
																			"id": 271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1425:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1425:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 255,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "1142:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1142:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1142:310:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 254,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "1119:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1119:343:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1100:362:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "1100:362:2"
											}
										]
									},
									"documentation": null,
									"id": 279,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:2:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:2"
									},
									"scope": 576,
									"src": "987:482:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1523:149:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 286,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1533:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 289,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "1563:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 287,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "1547:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 141,
															"src": "1547:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1547:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1533:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "1533:36:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 293,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "1579:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 295,
														"indexExpression": {
															"argumentTypes": null,
															"id": 294,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1589:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1579:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 300,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "1613:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 296,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "1595:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 298,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 297,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "1605:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1595:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 141,
															"src": "1595:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1595:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1579:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "1579:40:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1651:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1643:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1643:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 308,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1655:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 309,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1659:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															246
														],
														"referencedDeclaration": 246,
														"src": "1634:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1634:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "EmitStatement",
												"src": "1629:36:2"
											}
										]
									},
									"documentation": null,
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1490:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1502:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1502:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1489:24:2"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:0:2"
									},
									"scope": 576,
									"src": "1475:197:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "1728:155:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 320,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "1738:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 322,
														"indexExpression": {
															"argumentTypes": null,
															"id": 321,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1748:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1738:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 327,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "1776:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 323,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "1756:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 325,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 324,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "1766:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1756:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 163,
															"src": "1756:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1756:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1738:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1738:44:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 331,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1792:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 334,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "1822:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 332,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "1806:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 163,
															"src": "1806:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1806:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1792:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "1792:36:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 339,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1852:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1866:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1858:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1858:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 343,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "1870:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 338,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															246
														],
														"referencedDeclaration": 246,
														"src": "1843:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1843:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "EmitStatement",
												"src": "1838:38:2"
											}
										]
									},
									"documentation": null,
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1693:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1707:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1707:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1692:26:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:0:2"
									},
									"scope": 576,
									"src": "1678:205:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "1959:96:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 356,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "1969:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 359,
															"indexExpression": {
																"argumentTypes": null,
																"id": 357,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1979:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1969:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 360,
														"indexExpression": {
															"argumentTypes": null,
															"id": 358,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "1986:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1969:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 361,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1997:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1969:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "1969:33:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 365,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "2026:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 366,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2033:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 367,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "2042:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															238
														],
														"referencedDeclaration": 238,
														"src": "2017:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2017:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "EmitStatement",
												"src": "2012:36:2"
											}
										]
									},
									"documentation": null,
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1922:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1939:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1939:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1906:44:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:2"
									},
									"scope": 576,
									"src": "1889:166:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "2126:151:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 380,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "2136:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 382,
														"indexExpression": {
															"argumentTypes": null,
															"id": 381,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "2146:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2136:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 387,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "2174:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 383,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "2154:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 385,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 384,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2164:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2154:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 163,
															"src": "2154:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2154:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2136:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "2136:44:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 391,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "2190:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 393,
														"indexExpression": {
															"argumentTypes": null,
															"id": 392,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "2200:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2190:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 398,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "2224:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 394,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "2206:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 396,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 395,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2216:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2206:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 141,
															"src": "2206:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2206:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2190:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "2190:40:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 403,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "2254:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 404,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "2260:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 405,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "2264:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 402,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															246
														],
														"referencedDeclaration": 246,
														"src": "2245:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2245:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "EmitStatement",
												"src": "2240:30:2"
											}
										]
									},
									"documentation": null,
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "2080:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "2094:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "2106:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2106:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2079:38:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:2"
									},
									"scope": 576,
									"src": "2061:216:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2353:74:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 419,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "2372:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2372:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 421,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2384:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 422,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "2393:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 418,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "2363:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2363:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "2363:36:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2416:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 417,
												"id": 426,
												"nodeType": "Return",
												"src": "2409:11:2"
											}
										]
									},
									"documentation": null,
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2300:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2300:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2317:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2317:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2299:29:2"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2347:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2347:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2346:6:2"
									},
									"scope": 576,
									"src": "2283:144:2",
									"stateMutability": "nonpayable",
									"superFunction": 62,
									"visibility": "external"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "2499:70:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 438,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "2519:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2519:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 440,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "2531:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 441,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "2535:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 437,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2509:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "2509:32:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2558:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 436,
												"id": 445,
												"nodeType": "Return",
												"src": "2551:11:2"
											}
										]
									},
									"documentation": null,
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2451:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2463:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2450:24:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2493:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2493:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2492:6:2"
									},
									"scope": 576,
									"src": "2433:136:2",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "2689:241:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 458,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "2703:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 460,
															"indexExpression": {
																"argumentTypes": null,
																"id": 459,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "2713:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2703:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 463,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "2719:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2719:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2703:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2739:2:2",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2740:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2734:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2734:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2703:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 487,
												"nodeType": "IfStatement",
												"src": "2699:168:2",
												"trueBody": {
													"id": 486,
													"nodeType": "Block",
													"src": "2744:123:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 469,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "2758:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 473,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 470,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 449,
																			"src": "2768:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2758:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 474,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 471,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "2774:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2774:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2758:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 482,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "2837:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 475,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 221,
																					"src": "2788:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 477,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 476,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 449,
																					"src": "2798:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2788:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 480,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 478,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 591,
																					"src": "2804:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2804:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2788:27:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 163,
																		"src": "2788:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2788:68:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2758:98:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 485,
															"nodeType": "ExpressionStatement",
															"src": "2758:98:2"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 489,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "2886:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 490,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2892:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 491,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "2896:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 488,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2876:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2876:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2876:26:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2919:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 457,
												"id": 495,
												"nodeType": "Return",
												"src": "2912:11:2"
											}
										]
									},
									"documentation": null,
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "2606:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2606:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "2628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "2648:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2648:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2596:68:2"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "2683:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2683:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2682:6:2"
									},
									"scope": 576,
									"src": "2575:355:2",
									"stateMutability": "nonpayable",
									"superFunction": 82,
									"visibility": "external"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "3113:785:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 515,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "3131:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 516,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "3143:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3143:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3131:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a2045585049524544",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3160:20:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															},
															"value": "UniswapV2: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															}
														],
														"id": 514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															594,
															595
														],
														"referencedDeclaration": 595,
														"src": "3123:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3123:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "3123:58:2"
											},
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "3191:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 522,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3191:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3265:10:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 528,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "3293:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 532,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 226,
																					"src": "3394:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 533,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 499,
																					"src": "3435:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 534,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 501,
																					"src": "3466:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 535,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 503,
																					"src": "3499:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 539,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3530:15:2",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 536,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 230,
																							"src": "3530:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 538,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 537,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 499,
																							"src": "3537:5:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3530:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 540,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 505,
																					"src": "3571:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 530,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "3358:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3358:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3358:243:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 529,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "3327:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3327:292:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 525,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "3231:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3231:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3231:402:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 524,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "3208:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3208:435:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3191:452:2"
											},
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "3653:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 546,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3653:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 554,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 549,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "3690:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 550,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "3698:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 551,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "3701:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 552,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3704:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 548,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "3680:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3680:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3653:53:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 556,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "3737:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3765:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3757:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3757:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3737:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 561,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "3771:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 562,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "3791:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3771:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3737:59:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e56414c49445f5349474e4154555245",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3810:30:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															},
															"value": "UniswapV2: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															594,
															595
														],
														"referencedDeclaration": 595,
														"src": "3716:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3716:134:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "3716:134:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 569,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "3869:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 570,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "3876:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 571,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "3885:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "3860:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3860:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "3860:31:2"
											}
										]
									},
									"documentation": null,
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2961:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2984:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2984:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3009:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3029:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3052:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 506,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3052:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3069:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 508,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3088:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 510,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2951:152:2"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 576,
									"src": "2936:962:2",
									"stateMutability": "nonpayable",
									"superFunction": 116,
									"visibility": "external"
								}
							],
							"scope": 577,
							"src": "191:3709:2"
						}
					],
					"src": "36:3865:2"
				},
				"id": 2
			}
		}
	}
}